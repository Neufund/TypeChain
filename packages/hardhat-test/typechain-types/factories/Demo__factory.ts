/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Demo, DemoInterface } from "../Demo";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "a",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "b",
            type: "uint256",
          },
        ],
        internalType: "struct Demo.ConstructorArgs",
        name: "ca",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610176380380610176833981810160405281019061003291906100b2565b8060008082015181600001556020820151816001015590505050610129565b60006040828403121561006357600080fd5b61006d60406100db565b9050600061007d8482850161009d565b60008301525060206100918482850161009d565b60208301525092915050565b6000815190506100ac81610112565b92915050565b6000604082840312156100c457600080fd5b60006100d284828501610051565b91505092915050565b6000604051905081810181811067ffffffffffffffff821117156100fe57600080fd5b8060405250919050565b6000819050919050565b61011b81610108565b811461012657600080fd5b50565b603f806101376000396000f3fe6080604052600080fdfea2646970667358221220f67d533bbaf376eb456b275962951b7a7f2d34743f4936caa598fca78227185664736f6c63430006080033";

type DemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Demo__factory extends ContractFactory {
  constructor(...args: DemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    ca: ConstructorArgsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Demo> {
    return super.deploy(ca, overrides || {}) as Promise<Demo>;
  }
  getDeployTransaction(
    ca: ConstructorArgsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(ca, overrides || {});
  }
  attach(address: string): Demo {
    return super.attach(address) as Demo;
  }
  connect(signer: Signer): Demo__factory {
    return super.connect(signer) as Demo__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoInterface {
    return new utils.Interface(_abi) as DemoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Demo {
    return new Contract(address, _abi, signerOrProvider) as Demo;
  }
}
