/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract } from "@ethersproject/contracts";
import { Interface } from "@ethersproject/abi";
import type { Signer } from "@ethersproject/abstract-signer";
import type { Provider } from "@ethersproject/providers";
import type {
  ISimpleToken,
  ISimpleTokenInterface,
} from "../../v0.8.9/ISimpleToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISimpleToken__factory {
  static readonly abi = _abi;
  static createInterface(): ISimpleTokenInterface {
    return new Interface(_abi) as ISimpleTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider | undefined
  ): ISimpleToken {
    return new Contract(address, _abi, signerOrProvider) as ISimpleToken;
  }
}
